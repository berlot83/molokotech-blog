"use strict";(self.webpackChunkmolokotech_ui=self.webpackChunkmolokotech_ui||[]).push([[4234],{2198:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(4848),s=n(8453);const r={slug:"Interfaces",title:"Interfaces",authors:"axel",tags:["molokotech"]},i=void 0,o={permalink:"/java-blog/Interfaces",source:"@site/java-blog/2024-10-11-interfaces/2024-10-11-interfaces.md",title:"Interfaces",description:"banner",date:"2024-10-11T00:00:00.000Z",tags:[{inline:!0,label:"molokotech",permalink:"/java-blog/../tags.yml/molokotech"}],readingTime:3.06,hasTruncateMarker:!0,authors:[{name:"Axel Berlot",title:"Java developer @ Opendev Pro",url:"http://web.molokotech.com/?lang=en",email:"berlot83@yahoo.com.ar",page:{permalink:"/java-blog/authors/axel"},socials:{github:"https://github.com/berlot83",x:"https://x.com/Singleton",linkedin:"https://www.linkedin.com/in/axelberlot/",newsletter:"http://web.molokotech.com/?lang=en"},imageURL:"https://avatars.githubusercontent.com/u/22393878?s=96&v=4",key:"axel"}],frontMatter:{slug:"Interfaces",title:"Interfaces",authors:"axel",tags:["molokotech"]},unlisted:!1,prevItem:{title:"Anonymous Classes",permalink:"/java-blog/anonymous-clases"},nextItem:{title:"Autoboxing and Unboxing",permalink:"/java-blog/autoboxing-unboxing"}},l={authorsImageUrls:[void 0]},c=[{value:"Caracter\xedsticas:",id:"caracter\xedsticas",level:4},{value:"Ventajas:",id:"ventajas",level:4},{value:"Caracter\xedsitcas de sus miembros:",id:"caracter\xedsitcas-de-sus-miembros",level:4},{value:"Ejemplo pr\xe1ctico de cada uso",id:"ejemplo-pr\xe1ctico-de-cada-uso",level:4}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"banner",src:n(4887).A+"",width:"1400",height:"350"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://docusaurus.io/docs/blog",children:"sandbox.molokotech.com"})," are powered by the ",(0,a.jsx)(t.a,{href:"http://web.molokotech.com/?lang=en",children:"Molokotech"}),"."]}),"\n",(0,a.jsx)(t.h4,{id:"caracter\xedsticas",children:"Caracter\xedsticas:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Todos sus m\xe9todos son p\xfablicos por defecto, pero luego de java 9 en adelante los mismos pueden ser definidos privados con body definido."}),"\n",(0,a.jsx)(t.li,{children:"Pueden contener atributos y m\xe9todos."}),"\n",(0,a.jsx)(t.li,{children:"Pueden extender de otras interfaces."}),"\n",(0,a.jsx)(t.li,{children:"Pueden todos sus atributos son abstractos."}),"\n",(0,a.jsx)(t.li,{children:"Sus atributos son finales por definici\xf3n."}),"\n",(0,a.jsx)(t.li,{children:"Pueden contener atributos y m\xe9todos est\xe1ticos."}),"\n",(0,a.jsx)(t.li,{children:"Desde Java 8 en adelante pueden contener uno o m\xe1s m\xe9todos default."}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"ventajas",children:"Ventajas:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Las interfaces nos permiten definir contratos, que luego son implementados en una clase concreta."}),"\n",(0,a.jsx)(t.li,{children:"Las interfaces nos permiten aplicar con flexibilidad la abstracci\xf3n y el polimorfismo."}),"\n",(0,a.jsx)(t.li,{children:"Una Clase puede implementar m\xfaltiples interfaces que a diferencia de herencia entre clases que s\xf3lo se puede heredar de una clase."}),"\n",(0,a.jsx)(t.li,{children:"Las interfaces pueden ayudarnos a tener un c\xf3digo m\xe1s resumido con el uso de expresiones lambda."}),"\n",(0,a.jsx)(t.li,{children:"En funci\xf3n a interfaces pueden crearse instancias de clases an\xf3nimas para no depender de una implementaci\xf3n o clase particular previamente definida."}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// Concrete implementation\r\npublic class HiloConcreto implements Startable {\r\n\r\n\t@Override\r\n\tpublic void start() {\r\n\t\tSystem.out.println("HiloConcreto started");\r\n\t}\r\n\r\n}\r\n\r\n// Anonymous class\r\nclass MainAnonymous {\r\n\tpublic static void main(String[] args) {\r\n\t\tStartable s = new Startable() {\r\n\t\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic void start() {\r\n\t\t\t\tSystem.out.println("Main started into anonymous class!!!");\r\n\t\t\t}\r\n\r\n\t\t};\r\n\t\ts.start();\r\n\t}\r\n}\r\n\r\n// Lambda expression\r\nclass MainLambdaExpression {\r\n\tpublic static void main(String[] args) {\r\n\t\tStartable s = () -> System.out.println("Main started into lambda expression!!!");\r\n\t \ts.start();\r\n\t}\r\n}\r\n\r\ninterface Startable {\r\n\tvoid start();\r\n}\n'})}),"\n",(0,a.jsx)(t.h4,{id:"caracter\xedsitcas-de-sus-miembros",children:"Caracter\xedsitcas de sus miembros:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Los atributos son p\xfablic, est\xe1ticos y finales siempre."}),"\n",(0,a.jsx)(t.li,{children:"Los m\xe9todos pueden ser p\xfablicos por defecto o privados."}),"\n",(0,a.jsx)(t.li,{children:"Los m\xe9todos pueden ser abstractos o croncretos."}),"\n",(0,a.jsx)(t.li,{children:"Los m\xe9todos cuando son abstractos no pueden ser est\xe1tico y vecebersa."}),"\n",(0,a.jsx)(t.li,{children:"El uso de un m\xe9todo default tiene sentido cuando en las implementaci\xf3nes no se sobreescribe el mismo."}),"\n",(0,a.jsx)(t.li,{children:"Las insterfaces pueden definir m\xfaltiples m\xe9todos default."}),"\n",(0,a.jsx)(t.li,{children:"Pueden definir m\xfaltiples m\xe9todos privados."}),"\n",(0,a.jsx)(t.li,{children:"El uso de m\xe9todos privados tiene sentido cuando internamente en la misma interface se invocan m\xe9todos."}),"\n",(0,a.jsx)(t.li,{children:"Como cualquier acceso est\xe1tico se puede prescindir del nombre de la clase, a menos que exista una variable definida en el mismo m\xe9todo con lo cual el compilador prioriza la variable local y deja de apuntar a la est\xe1tica."}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"ejemplo-pr\xe1ctico-de-cada-uso",children:"Ejemplo pr\xe1ctico de cada uso"}),"\n",(0,a.jsx)(t.p,{children:"El siguiente es un ejercicio, donde se trata de explicar c\xf3mo se pueden usar los miembros de la interface en forma pr\xe1ctica."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'public interface Streamable {\r\n\r\n\t/**\r\n\t * \t\tAttributes -> only public\r\n\t */\r\n\r\n\t// implicitly public static and final\r\n\tString letters = "abc";\r\n\t// Redundant static and access modifier\r\n\tpublic static String numbers = "123";\r\n\r\n\t/**\r\n\t * \t\tMethods -> can be public or private\r\n\t */\r\n\r\n\t// implicitly public and abstract\r\n\tvoid stream();\r\n\r\n\t// Redundant abstract and access modifier\r\n\tpublic abstract void streamRedundant();\r\n\r\n\t// Must\'ve a body too\r\n\tprivate void privateInstanceLetterMethod() {\r\n\t\tletters = letters + "def"; \t// this will not compile!!!\r\n\t\tSystem.out.println(Streamable.letters);\r\n\t}\r\n\r\n\t// Belongs to the instance when the implementation did not override this one\r\n\tdefault void defaultLettersBehaivor() {\r\n\t\tprivateInstanceLetterMethod();\r\n\t}\r\n\t\r\n\t// Belongs to the instance when the implementation did not override this one\r\n\tdefault void defaultNumbersBehaivor() {\r\n\t\tStreamable.privatEstaticMethod("678");\r\n\t}\r\n\r\n\t// Belongs to the class and must\'ve a body too\r\n\tprivate static void privatEstaticMethod(String numbers) {\r\n\t\tnumbers = numbers + "456";\t// this will compile OK!!!\r\n\t\tSystem.out.println(Streamable.numbers);\r\n\t}\r\n\r\n}\n'})}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsx)(t.p,{children:"Desde Java 8 en adelante se habilit\xf3 el uso de expresiones lambda ampliamente utilizadas en programaci\xf3n funcional, la que mejora notablemente la lectura del c\xf3digo y limita la cantidad de l\xedneas de c\xf3digo haciendo una lectura de los c\xf3digos fuente m\xe1s legible."})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},4887:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/banner-java-d9daf6988b346c0809bf29ea77bca5ae.jpg"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var a=n(6540);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);