"use strict";(self.webpackChunkmolokotech_ui=self.webpackChunkmolokotech_ui||[]).push([[347],{7784:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"monolith-vs-microservices","metadata":{"permalink":"/opinions-blog/monolith-vs-microservices","source":"@site/opinions-blog/2024-10-20-monolith-vs-microservices/2024-10-20-monolith-vs-microservices.md","title":"Monolitos vs Microservicios","description":"banner","date":"2024-10-20T00:00:00.000Z","tags":[{"inline":true,"label":"molokotech","permalink":"/opinions-blog/../tags.yml/molokotech"}],"readingTime":4.015,"hasTruncateMarker":false,"authors":[{"name":"Axel Berlot","title":"Java developer @ Opendev Pro","url":"http://web.molokotech.com/?lang=en","email":"berlot83@yahoo.com.ar","page":{"permalink":"/opinions-blog/authors/axel"},"socials":{"github":"https://github.com/berlot83","x":"https://x.com/Singleton","linkedin":"https://www.linkedin.com/in/axelberlot/","newsletter":"http://web.molokotech.com/?lang=en"},"imageURL":"https://avatars.githubusercontent.com/u/22393878?s=96&v=4","key":"axel"}],"frontMatter":{"slug":"monolith-vs-microservices","title":"Monolitos vs Microservicios","authors":["axel"],"tags":["molokotech"]},"unlisted":false,"nextItem":{"title":"Bio","permalink":"/opinions-blog/bio"}},"content":"![banner](./../../static/img/banner-java.jpg)\\r\\n\\r\\n## Monolitos vs Microservicios\\r\\n\\r\\n### Monolitos\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\"}}>Un monolito es una gran bloque de c\xf3digo que tiene un prop\xf3sito de negocio que cumplir, los mismos habitualmente est\xe1n conformados por una aplicaci\xf3n que algutina toda la l\xf3gica del negocio en el mismo lugar, en aquellas apicaciones donde exista una interfaz gr\xe1fica esmuy com\xfan que la misma est\xe9 integrada al monolito sin embargo no es excluyente y puede ocurrir que exista monolito sin ui y que la misma se conecte por REST por ejemplo u otro tipo de api.</div>\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\"}}>Podemos definir a un monolito como un concepto de conjunto o aglutinaci\xf3n de l\xf3gica que permite concentrar c\xf3digo en un mismo lugar, naturalmente ante el crecimiento vertical del mismo hace poco escalable su crecimiento a trav\xe9s del tiempo.</div>\\r\\n\\r\\n##### Monolito completo\\r\\n<div  style={{\\"text-align\\": \\"justify\\"}}>Este es el ejemplo m\xe1s cl\xe1sico de lo que representa un monolito, una aplicaci\xf3n con todo el core de negocio e interface si existiera dentro del mismo bloque de c\xf3digo, loque es importante entender es que los monolitos no son todos WEB, por ejemplo es com\xfan que las aplicaciones de escritorio por ejemplo con Java Swing o JavaFX sean un gran bloque de c\xf3digo integrado.</div>\\r\\n\\r\\nEjemplos como este pueden ser los siguientes:\\r\\n* Aplicaciones Java swing\\r\\n* Aplicaciones JavaFX\\r\\n* Aplicaciones Server side Rendering, JSP, JSF, etc, con alg\xfan template engine como Thymeleaf u otro.\\r\\n\\r\\n![monolith1](./monolith-v1.drawio.png)\\r\\n\\r\\n##### Monolito por acoplamiento de l\xf3gica core\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\"}}>\\r\\n* Aplicaciones por ejemplo en Java, PHP o alg\xfan lenguaje de programaci\xf3n que tenga ligado fuertemente su core de  en un bloque de c\xf3digo dif\xedcil de desarmar, incluso existiendo una aplicaci\xf3n cliente que consuma datos por medio de alguna API no deja de ser un monolito.\\r\\n\\r\\n_Es importante aclarar que API puede ser m\xe1s de un tipo no s\xf3lo REST, puede ser GRPC, Graphql, SOAP, etc_\\r\\n</div>\\r\\n\\r\\n![monolith2](./monolith-v2.drawio.png)\\r\\n\\r\\n### Microservicios\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\"}}>Un microservicio conceptualmente es una aplicaci\xf3n que tiene una funci\xf3n determinada y que sirve datos a traves de alguna API del alg\xfan tipo, es un concepto de desarrollo que puede tener variantes dependiendo c\xf3mo se lo use, pero lo m\xe1s importante es que cumpla con el concepto de responsabilidad \xfanica m\xe1s all\xe1 del tama\xf1o ya que un microservicio puede ser chico, mediano o grande ya que la palabra micro es s\xf3lo un concepto abstracto que atomiza responsabilidades en sistemas distribuidos.</div>\\r\\n\\r\\n##### Microservicio\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\"}}>Este ejemplo s\xf3lo muestra una aplicaci\xf3n que para poder llamarla microservicio debe cumplir una responsabilidad \xfanica, si la misma tiene una funci\xf3n particular puede llamarse microservicio, sino s\xf3lo es una aplicaci\xf3n que expone servicios mediante alg\xfan tipo API por ejemplo la m\xe1s com\xfan REST.</div>\\r\\n\\r\\n![microservice1](./microservice-v1.drawio.png)\\r\\n\\r\\n##### Ecosistema de microservicios\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\"}}>Un ecosistema de microservicios es un conjunto de aplicaciones distribuidas con diferentes responsabilidades que funcionan en forma aut\xf3noma y que su forma de comunicaci\xf3n es mediante alg\xfan tipo de API, los ecosistemas de microservicios habitualmente son un proyecto a nivel empresarial para responder ante una demanda de aplicaciones que consumir\xe1n diferentes or\xedgenes de informaci\xf3n.</div>\\r\\n\\r\\n![microservice2](./microservice-ecosystem-v1.drawio.png)\\r\\n\\r\\n##### Monolito de microservicios distribuidos\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\", \\"float\\": \\"left\\"}}>En sus inicios los microservicios se utilizaron para tener una responsabilidad \xfanica y muy importante poder funcionar aut\xf3nomamente sin tener acoplamiento con otras aplicaciones lo que le daba inependencia de funcionamiento, esto hoy en d\xeda est\xe1 siendo sobreescrito en diferentes ecosistemas que se desarrollan con dependencias entre microservicios acoplando el funcionamiento de uno con la existencia de otro en comunicaciones server to server, aunque este escenario est\xe1 tomando m\xe1s auge y adopato su uso en gran cantidad de empresas es el m\xe1s riesgoso de todos los escenarios nombrados anteriormente, ya que acopla el funcionamiento de aplicaciones con otras, lo cual necesita una orquestaci\xf3n particular entre c\xe9lulas que mantengan actualizadas aplicaciones.\\r\\nUn Monolito distribuido es una pr\xe1ctica com\xfan hoy en d\xedaen el mundo empresarial, la cual puede de ser mejor monitoreada con aplicaciones como Istio, service Mesh u Observabilidad en trazas, sin embargo si no se toman estas medidas de monitoreo el control del mismo es ca\xf3tico ya que a diferencia de los monolitos estandar ac\xe1 son aplicaciones est\xe1n distribuidas en diferentes or\xedgenes pero son dependientes unas de otras.</div>\\r\\n\\r\\n![microservice3](./microservice-ecosystem-v2.drawio.png)\\r\\n\\r\\n##### Microservicios distribuidos en cadena\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\", \\"float\\": \\"left\\"}}>Existen esquemas m\xe1s maduros de un monolito distribuido donde en realidad es una cadena de microservicios que ejecutan un resultado final, es en definitiva un monolito con pasos definidos y una distribuci\xf3n de la carga controlada, por ejemplo es conocido el esquema de microservicios en cadena que tiene Netflix, con aplicaciones distribuidas que tienen diversas funcionalidades para obtener un resultado, la comunicaci\xf3n entre las mismas puede ser por HTTP, por TCP u otro tipo, lo importante de definir ac\xe1 es que \xe9stas arquitecturas demandan un mantenimiento y una gesti\xf3n diferente ya que la interoperabilidad entre las aplicaciones es el core de su funcionamiento.</div>\\r\\n\\r\\n![microservice3](./microservice-ecosystem-v3.drawio.png)"},{"id":"bio","metadata":{"permalink":"/opinions-blog/bio","source":"@site/opinions-blog/2024-10-11-bio/2024-10-11-bio.md","title":"Bio","description":"banner","date":"2024-10-11T00:00:00.000Z","tags":[{"inline":true,"label":"molokotech","permalink":"/opinions-blog/../tags.yml/molokotech"}],"readingTime":2.16,"hasTruncateMarker":true,"authors":[{"name":"Axel Berlot","title":"Java developer @ Opendev Pro","url":"http://web.molokotech.com/?lang=en","email":"berlot83@yahoo.com.ar","page":{"permalink":"/opinions-blog/authors/axel"},"socials":{"github":"https://github.com/berlot83","x":"https://x.com/Singleton","linkedin":"https://www.linkedin.com/in/axelberlot/","newsletter":"http://web.molokotech.com/?lang=en"},"imageURL":"https://avatars.githubusercontent.com/u/22393878?s=96&v=4","key":"axel"}],"frontMatter":{"slug":"bio","title":"Bio","authors":["axel"],"tags":["molokotech"]},"unlisted":false,"prevItem":{"title":"Monolitos vs Microservicios","permalink":"/opinions-blog/monolith-vs-microservices"}},"content":"![banner](./../../static/img/banner-java.jpg)\\r\\n\\r\\n\x3c!-- <div class=\\"row\\">\\r\\n    <div class=\\"col-9\\" style={{\\"text-align\\": \\"justify\\", \\"width\\": \\"70%\\", \\"padding\\": \\"10px\\" }}>Me presento, mi nombre es **Axel**, cumplo el rol de **arquitecto de software** en una reconocida **Software Factory** de **Argentina**, comenc\xe9 mis primeros pasos en el mundo del desarrollo all\xe1 por el **2014** de software con **PHP** y **HTML**, sin embargo la curiosidad de saber me empuj\xf3 a aprender otros lenguajes hasta que conoc\xed **Java**, sin duda **mi lenguaje predilecto**.</div>\\r\\n    <div class=\\"col-3\\" style={{\\"width\\": \\"200px\\", \\"width\\": \\"30%\\", \\"position\\": \\"relative\\" }}>![thumb](./linkedin-thumb.jpg)</div>\\r\\n</div> --\x3e\\r\\n\\r\\n### Sobre mi\\r\\n\\r\\n<div  style={{\\"text-align\\": \\"justify\\", \\"float\\": \\"left\\"}}>Me presento, mi nombre es **Axel**, cumplo el rol de **arquitecto de software** en una reconocida **Software Factory** de **Argentina**, comenc\xe9 mis primeros pasos en el mundo del desarrollo all\xe1 por el **2014** de software con **PHP** y **HTML**, <div  style={{ \\"width\\": \\"30%\\", \\"display\\": \\"block\\", \\"float\\": \\"right\\", \\"padding-left\\": \\"10px\\", \\"padding-top\\": \\"10px\\", \\"padding-down\\": \\"10px\\" }}>![thumb](./linkedin-thumb.jpg)</div> sin embargo la curiosidad de saber me empuj\xf3 a aprender otros lenguajes hasta que conoc\xed **Java**, sin duda **mi lenguaje predilecto**.\\r\\nJava me permiti\xf3 crear aplicaciones desktop con **Swing** y **JavaFX** muchos a\xf1os atr\xe1s cuando algunos pocos todav\xeda demandaban este tipo de soluciones, con el tiempo los requerimientos fueron avanzando y el romanticismo por ese tipo de aplicaciones fue desapareciendo hasta caer en la realidad de las **aplicaciones web**, este fue un camino de ida, que pas\xf3 por dos grandes etapas, la primera del mundo monol\xedtico con aplicaciones integradas por completo en un core y la segunda hasta hoy orientadas a microservicios. </div>\\r\\n\\r\\n<div style={{\\"text-align\\": \\"justify\\"}}>Como profesional del c\xf3digo no me cierro a ning\xfan lenguaje pero siento y quiero seguir especializandome en el lenguaje Java, uno de mis objetivos es completar **certificaciones** directas de **Oracle**, las cuales cuentan con un nivel de prestigio muy alto ya que tienen una dificultad poco com\xfan.</div>\\r\\n\\r\\n<div style={{\\"text-align\\": \\"justify\\"}}>En mi trabajo actual pas\xe9 por varios roles, desde **desarrollador** en su mayor\xeda de lenguaje **Java**, **Angular** y un poco de **NodeJS**, pas\xe9 por puestos de **l\xedder t\xe9cnico** de una o m\xe1s c\xe9lulas hasta el d\xeda de hoy que cumplo el rol de **arquitecto de software**, realmente me gusta lo que hago y le dedico tiempo y esfuerzo, utilizando mis tiempos libres para seguir capacit\xe1ndome en nuevas tecnolog\xedas para que la aplicaci\xf3n que creemos el d\xeda de ma\xf1ana sea mejor y m\xe1s performante que la de hoy.</div>  \\r\\n\\r\\n#### Gracias por leer y bienvendio a mi Blog!\\r\\n\\r\\n~~~java\\r\\n\\r\\nimport java.util.concurrent.Executors;\\r\\nimport java.util.concurrent.ScheduledExecutorService;\\r\\nimport java.util.concurrent.TimeUnit;\\r\\n\\r\\npublic class Greettings {\\r\\n\\t\\r\\n\\tpublic static void main(String[] args) throws Exception {\\r\\n\\t\\tScheduledExecutorService sched = Executors.newSingleThreadScheduledExecutor();\\r\\n\\t\\tsched.scheduleAtFixedRate(() -> System.out.println(\\"Wellcome to my blog\\"), 2, 2, TimeUnit.SECONDS); \\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\n~~~\\r\\n\\r\\n\x3c!-- truncate --\x3e"}]}}')}}]);